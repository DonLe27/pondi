{"ast":null,"code":"import storage from 'redux-persist/es/storage';\nimport { apiMiddleware } from 'redux-api-middleware';\nimport { applyMiddleware, createStore } from 'redux';\nimport { createFilter } from 'redux-persist-transform-filter';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport { routerMiddleware } from 'react-router-redux';\nimport rootReducer from './reducers';\nexport default (function (history) {\n  var persistedFilter = createFilter('auth', ['access', 'refresh']);\n  var reducer = persistReducer({\n    key: 'polls',\n    storage: storage,\n    whitelist: ['auth'],\n    transforms: [persistedFilter]\n  }, rootReducer);\n  var store = createStore(reducer, {}, applyMiddleware(apiMiddleware, routerMiddleware(history)));\n  persistStore(store);\n  return store;\n}); // const store = createStore(\n//     reducers, {}\n// );\n// export default store;","map":{"version":3,"sources":["/Users/stephaniedoan/redux-login/src/store.js"],"names":["storage","apiMiddleware","applyMiddleware","createStore","createFilter","persistReducer","persistStore","routerMiddleware","rootReducer","history","persistedFilter","reducer","key","whitelist","transforms","store"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,0BAApB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA+B,gCAA/B;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,eAA7C;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,gBAAe,UAACC,OAAD,EAAa;AACxB,MAAMC,eAAe,GAAGN,YAAY,CAClC,MADkC,EAC1B,CAAC,QAAD,EAAW,SAAX,CAD0B,CAApC;AAEA,MAAMO,OAAO,GAAGN,cAAc,CAC5B;AACEO,IAAAA,GAAG,EAAE,OADP;AAEEZ,IAAAA,OAAO,EAAEA,OAFX;AAGEa,IAAAA,SAAS,EAAE,CAAC,MAAD,CAHb;AAIEC,IAAAA,UAAU,EAAE,CAACJ,eAAD;AAJd,GAD4B,EAO5BF,WAP4B,CAA9B;AAQA,MAAMO,KAAK,GAAGZ,WAAW,CACvBQ,OADuB,EACd,EADc,EAEvBT,eAAe,CACbD,aADa,EAEbM,gBAAgB,CAACE,OAAD,CAFH,CAFQ,CAAzB;AAMAH,EAAAA,YAAY,CAACS,KAAD,CAAZ;AACA,SAAOA,KAAP;AACH,CAnBD,E,CAqBA;AACA;AACA;AAEA","sourcesContent":["import storage from 'redux-persist/es/storage'\nimport { apiMiddleware } from 'redux-api-middleware';\nimport { applyMiddleware, createStore } from 'redux'\nimport { createFilter   } from 'redux-persist-transform-filter';\nimport { persistReducer, persistStore } from 'redux-persist'\nimport { routerMiddleware } from 'react-router-redux'\nimport rootReducer from './reducers'\n\nexport default (history) => {\n    const persistedFilter = createFilter(\n      'auth', ['access', 'refresh']);\n    const reducer = persistReducer(\n      {\n        key: 'polls',\n        storage: storage,\n        whitelist: ['auth'],\n        transforms: [persistedFilter]\n      },\n      rootReducer)\n    const store = createStore(\n      reducer, {},\n      applyMiddleware(\n        apiMiddleware, \n        routerMiddleware(history))\n    )\n    persistStore(store)\n    return store\n}\n\n// const store = createStore(\n//     reducers, {}\n// );\n\n// export default store;"]},"metadata":{},"sourceType":"module"}