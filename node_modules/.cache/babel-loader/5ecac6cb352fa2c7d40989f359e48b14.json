{"ast":null,"code":"import _objectSpread from \"/Users/stephaniedoan/redux-login/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport jwtDecode from 'jwt-decode';\nimport * as auth from '../actions/auth';\nvar initialState = {\n  access: undefined,\n  refresh: undefined,\n  errors: {}\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case auth.LOGIN_SUCCESS:\n      return {\n        access: _objectSpread({\n          token: action.payload.access\n        }, jwtDecode(action.payload.access)),\n        refresh: _objectSpread({\n          token: action.payload.refresh\n        }, jwtDecode(action.payload.refresh)),\n        errors: {}\n      };\n\n    case auth.TOKEN_RECEIVED:\n      return _objectSpread({}, state, {\n        access: _objectSpread({\n          token: action.payload.access\n        }, jwtDecode(action.payload.access))\n      });\n\n    case auth.LOGIN_FAILURE:\n    case auth.TOKEN_FAILURE:\n      return {\n        access: undefined,\n        refresh: undefined,\n        errors: action.payload.response || {\n          'non_field_errors': action.payload.statusText\n        }\n      };\n\n    default:\n      return state;\n  }\n});\nexport function accessToken(state) {\n  if (state.access) {\n    return state.access.token;\n  }\n}\nexport function refreshToken(state) {\n  if (state.refresh) {\n    return state.refresh.token;\n  }\n}\nexport function isAccessTokenExpired(state) {\n  if (state.access && state.access.exp) {\n    return 1000 * state.access.exp - new Date().getTime() < 5000;\n  }\n\n  return true;\n}\nexport function isRefreshTokenExpired(state) {\n  if (state.refresh && state.refresh.exp) {\n    return 1000 * state.refresh.exp - new Date().getTime() < 5000;\n  }\n\n  return true;\n}\nexport function isAuthenticated(state) {\n  return !isRefreshTokenExpired(state);\n}\nexport function errors(state) {\n  return state.errors;\n}","map":{"version":3,"sources":["/Users/stephaniedoan/redux-login/src/reducers/auth.js"],"names":["jwtDecode","auth","initialState","access","undefined","refresh","errors","state","action","type","LOGIN_SUCCESS","token","payload","TOKEN_RECEIVED","LOGIN_FAILURE","TOKEN_FAILURE","response","statusText","accessToken","refreshToken","isAccessTokenExpired","exp","Date","getTime","isRefreshTokenExpired","isAuthenticated"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,IAAZ,MAAsB,iBAAtB;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAEC,SADW;AAEnBC,EAAAA,OAAO,EAAED,SAFU;AAGnBE,EAAAA,MAAM,EAAE;AAHW,CAArB;AAKA,gBAAe,YAAgC;AAAA,MAA/BC,KAA+B,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKR,IAAI,CAACS,aAAV;AACE,aAAO;AACLP,QAAAA,MAAM;AACJQ,UAAAA,KAAK,EAAEH,MAAM,CAACI,OAAP,CAAeT;AADlB,WAEDH,SAAS,CAACQ,MAAM,CAACI,OAAP,CAAeT,MAAhB,CAFR,CADD;AAKLE,QAAAA,OAAO;AACLM,UAAAA,KAAK,EAAEH,MAAM,CAACI,OAAP,CAAeP;AADjB,WAEFL,SAAS,CAACQ,MAAM,CAACI,OAAP,CAAeP,OAAhB,CAFP,CALF;AASLC,QAAAA,MAAM,EAAE;AATH,OAAP;;AAWF,SAAKL,IAAI,CAACY,cAAV;AACE,+BACKN,KADL;AAEEJ,QAAAA,MAAM;AACJQ,UAAAA,KAAK,EAAEH,MAAM,CAACI,OAAP,CAAeT;AADlB,WAEDH,SAAS,CAACQ,MAAM,CAACI,OAAP,CAAeT,MAAhB,CAFR;AAFR;;AAOF,SAAKF,IAAI,CAACa,aAAV;AACA,SAAKb,IAAI,CAACc,aAAV;AACE,aAAO;AACJZ,QAAAA,MAAM,EAAEC,SADJ;AAEJC,QAAAA,OAAO,EAAED,SAFL;AAGJE,QAAAA,MAAM,EACFE,MAAM,CAACI,OAAP,CAAeI,QAAf,IACG;AAAC,8BAAoBR,MAAM,CAACI,OAAP,CAAeK;AAApC;AALH,OAAP;;AAOF;AACE,aAAOV,KAAP;AA/BJ;AAiCD,CAlCD;AAmCA,OAAO,SAASW,WAAT,CAAqBX,KAArB,EAA4B;AAC/B,MAAIA,KAAK,CAACJ,MAAV,EAAkB;AACd,WAAQI,KAAK,CAACJ,MAAN,CAAaQ,KAArB;AACH;AACJ;AAED,OAAO,SAASQ,YAAT,CAAsBZ,KAAtB,EAA6B;AAChC,MAAIA,KAAK,CAACF,OAAV,EAAmB;AACf,WAAQE,KAAK,CAACF,OAAN,CAAcM,KAAtB;AACH;AACJ;AAED,OAAO,SAASS,oBAAT,CAA8Bb,KAA9B,EAAqC;AAC1C,MAAIA,KAAK,CAACJ,MAAN,IAAgBI,KAAK,CAACJ,MAAN,CAAakB,GAAjC,EAAsC;AACpC,WAAO,OAAOd,KAAK,CAACJ,MAAN,CAAakB,GAApB,GAA2B,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAA1B,GAAmD,IAA1D;AACD;;AACD,SAAO,IAAP;AACD;AACD,OAAO,SAASC,qBAAT,CAA+BjB,KAA/B,EAAsC;AAC3C,MAAIA,KAAK,CAACF,OAAN,IAAiBE,KAAK,CAACF,OAAN,CAAcgB,GAAnC,EAAwC;AACtC,WAAO,OAAOd,KAAK,CAACF,OAAN,CAAcgB,GAArB,GAA4B,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAA3B,GAAoD,IAA3D;AACD;;AACD,SAAO,IAAP;AACD;AACD,OAAO,SAASE,eAAT,CAAyBlB,KAAzB,EAAgC;AACrC,SAAO,CAACiB,qBAAqB,CAACjB,KAAD,CAA7B;AACD;AACD,OAAO,SAASD,MAAT,CAAgBC,KAAhB,EAAuB;AAC3B,SAAQA,KAAK,CAACD,MAAd;AACF","sourcesContent":["import jwtDecode from 'jwt-decode'\nimport * as auth from '../actions/auth'\nconst initialState = {\n  access: undefined,\n  refresh: undefined,\n  errors: {},\n}\nexport default (state=initialState, action) => {\n  switch(action.type) {\n    case auth.LOGIN_SUCCESS:\n      return {\n        access: {\n          token: action.payload.access,\n          ...jwtDecode(action.payload.access)\n        },\n        refresh: {\n          token: action.payload.refresh,\n          ...jwtDecode(action.payload.refresh)\n        },\n        errors: {}\n    }\n    case auth.TOKEN_RECEIVED:\n      return {\n        ...state,\n        access: {\n          token: action.payload.access,\n          ...jwtDecode(action.payload.access)\n        }\n      }\n    case auth.LOGIN_FAILURE:\n    case auth.TOKEN_FAILURE:\n      return {\n         access: undefined,\n         refresh: undefined,\n         errors: \n             action.payload.response || \n                {'non_field_errors': action.payload.statusText},\n      }\n    default:\n      return state\n    }\n}\nexport function accessToken(state) {\n    if (state.access) {\n        return  state.access.token\n    }\n}\n    \nexport function refreshToken(state) {\n    if (state.refresh) {\n        return  state.refresh.token\n    }\n}\n    \nexport function isAccessTokenExpired(state) {\n  if (state.access && state.access.exp) {\n    return 1000 * state.access.exp - (new Date()).getTime() < 5000\n  }\n  return true\n}\nexport function isRefreshTokenExpired(state) {\n  if (state.refresh && state.refresh.exp) {\n    return 1000 * state.refresh.exp - (new Date()).getTime() < 5000\n  }\n  return true\n}\nexport function isAuthenticated(state) {\n  return !isRefreshTokenExpired(state)\n}\nexport function errors(state) {\n   return  state.errors\n}"]},"metadata":{},"sourceType":"module"}