{"ast":null,"code":"import _objectWithoutProperties from \"/Users/stephaniedoan/redux-login/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/stephaniedoan/redux-login/src/containers/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport * as reducers from '../reducers';\n\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      isAuthenticated = _ref.isAuthenticated,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"isAuthenticated\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      return isAuthenticated ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: reducers.isAuthenticated(state)\n  };\n};\n\nexport default connect(mapStateToProps, null)(PrivateRoute);","map":{"version":3,"sources":["/Users/stephaniedoan/redux-login/src/containers/PrivateRoute.js"],"names":["React","Route","Redirect","connect","reducers","PrivateRoute","Component","component","isAuthenticated","rest","props","pathname","state","from","location","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,MAAyBC,eAAzB,QAAyBA,eAAzB;AAAA,MAA6CC,IAA7C;;AAAA,SACnB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aAC5BF,eAAe,GACb,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADa,GAGb,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AACZC,UAAAA,QAAQ,EAAE,QADE;AAEZC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAFK,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJ0B;AAAA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADmB;AAAA,CAArB;;AAaA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACH,KAAD;AAAA,SAAY;AAClCJ,IAAAA,eAAe,EAAEJ,QAAQ,CAACI,eAAT,CAAyBI,KAAzB;AADiB,GAAZ;AAAA,CAAxB;;AAIA,eAAeT,OAAO,CAACY,eAAD,EAAkB,IAAlB,CAAP,CAA+BV,YAA/B,CAAf","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router'\nimport { connect } from 'react-redux'\nimport * as reducers from '../reducers'\n\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\n  <Route {...rest} render={props => (\n    isAuthenticated ? (\n      <Component {...props}/>\n    ) : (\n      <Redirect to={{\n        pathname: '/login',\n        state: { from: props.location }\n      }}/>\n    )\n  )}/>\n)\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: reducers.isAuthenticated(state)\n})\n\nexport default connect(mapStateToProps, null)(PrivateRoute);"]},"metadata":{},"sourceType":"module"}