{"ast":null,"code":"var BASE_URL = 'http://ff379468.ngrok.io'; //127.0.0.1:2000\n\nexport var login = function login(username, password) {\n  return function (dispatch, getState) {\n    var headers = {\n      \"Content-Type\": \"application/json\",\n      'Access-Control-Allow-Origin': '*'\n    };\n    var body = JSON.stringify({\n      username: username,\n      password: password\n    });\n    console.log('USERNAME:', username);\n    console.log('PASS:', password);\n    console.log('BODY:', body);\n    return fetch(BASE_URL + \"/api/auth/login/\", {\n      headers: headers,\n      body: body,\n      method: \"POST\"\n    }).then(function (res) {\n      if (res.status < 500) {\n        //console.log('there was an error:', res);\n        return res.json().then(function (data) {\n          return {\n            status: res.status,\n            data: data\n          };\n        });\n      } else {\n        console.log(\"Server Error!\");\n        throw res;\n      }\n    }).then(function (res) {\n      if (res.status === 200) {\n        console.log(\"LOGIN SUCCESSFUL\");\n        dispatch({\n          type: 'LOGIN_SUCCESSFUL',\n          data: res.data\n        });\n        return res.data;\n      } else if (res.status === 403 || res.status === 401) {\n        console.log(\"AUTH ERROR\");\n        dispatch({\n          type: \"AUTHENTICATION_ERROR\",\n          data: res.data\n        });\n        throw res.data;\n      } else {\n        console.log(\"LOGIN FAIL\");\n        dispatch({\n          type: \"LOGIN_FAILED\",\n          data: res.data\n        });\n        throw res.data;\n      }\n    });\n  };\n};\nexport var loadUser = function loadUser() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: \"USER_LOADING\"\n    });\n    var token = getState().auth.token;\n    var headers = {\n      \"Content-Type\": \"application/json\"\n    };\n\n    if (token) {\n      headers[\"Authorization\"] = \"Token \".concat(token);\n    }\n\n    return fetch(BASE_URL, {\n      headers: headers\n    }).then(function (res) {\n      if (res.status < 500) {\n        return res.json().then(function (data) {\n          return {\n            status: res.status,\n            data: data\n          };\n        });\n      } else {\n        console.log(\"Server Error!\");\n        throw res;\n      }\n    }).then(function (res) {\n      if (res.status === 200) {\n        dispatch({\n          type: 'USER_LOADED',\n          user: res.data\n        });\n        return res.data;\n      } else if (res.status >= 400 && res.status < 500) {\n        dispatch({\n          type: \"AUTHENTICATION_ERROR\",\n          data: res.data\n        });\n        throw res.data;\n      }\n    });\n  };\n};\nexport var register = function register(username, password) {\n  return function (dispatch, getState) {\n    var headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    var body = JSON.stringify({\n      username: username,\n      password: password\n    });\n    return fetch(BASE_URL + \"/api/auth/register/\", {\n      headers: headers,\n      body: body,\n      method: \"POST\"\n    }).then(function (res) {\n      if (res.status < 500) {\n        return res.json().then(function (data) {\n          return {\n            status: res.status,\n            data: data\n          };\n        });\n      } else {\n        console.log(\"Server Error!\");\n        throw res;\n      }\n    }).then(function (res) {\n      if (res.status === 200) {\n        dispatch({\n          type: 'REGISTRATION_SUCCESSFUL',\n          data: res.data\n        });\n        return res.data;\n      } else if (res.status === 403 || res.status === 401) {\n        dispatch({\n          type: \"AUTHENTICATION_ERROR\",\n          data: res.data\n        });\n        throw res.data;\n      } else {\n        dispatch({\n          type: \"REGISTRATION_FAILED\",\n          data: res.data\n        });\n        throw res.data;\n      }\n    });\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch, getState) {\n    var headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    return fetch(BASE_URL + \"/logout/\", {\n      headers: headers,\n      body: \"\",\n      method: \"POST\"\n    }).then(function (res) {\n      if (res.status === 204) {\n        return {\n          status: res.status,\n          data: {}\n        };\n      } else if (res.status < 500) {\n        return res.json().then(function (data) {\n          return {\n            status: res.status,\n            data: data\n          };\n        });\n      } else {\n        console.log(\"Server Error!\");\n        throw res;\n      }\n    }).then(function (res) {\n      if (res.status === 204) {\n        dispatch({\n          type: 'LOGOUT_SUCCESSFUL'\n        });\n        return res.data;\n      } else if (res.status === 403 || res.status === 401) {\n        dispatch({\n          type: \"AUTHENTICATION_ERROR\",\n          data: res.data\n        });\n        throw res.data;\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/stephaniedoan/redux-login/src/actions/auth.js"],"names":["BASE_URL","login","username","password","dispatch","getState","headers","body","JSON","stringify","console","log","fetch","method","then","res","status","json","data","type","loadUser","token","auth","user","register","logout"],"mappings":"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","sourcesContent":["const BASE_URL = 'http://ff379468.ngrok.io';\n//127.0.0.1:2000\n\nexport const login = (username, password) => {\n  return (dispatch, getState) => {\n    let headers = {\"Content-Type\": \"application/json\", 'Access-Control-Allow-Origin': '*'};\n    let body = JSON.stringify({username, password});\n\n    console.log('USERNAME:', username);\n    console.log('PASS:', password);\n    console.log('BODY:', body);\n\n    return fetch(BASE_URL + \"/api/auth/login/\", {headers, body, method: \"POST\"})\n      .then(res => {\n        if (res.status < 500) {\n          //console.log('there was an error:', res);\n          return res.json().then(data => {\n            return {status: res.status, data};\n          })\n        } else {\n          console.log(\"Server Error!\");\n          throw res;\n        }\n      })\n      .then(res => {\n        if (res.status === 200) {\n          console.log(\"LOGIN SUCCESSFUL\");\n          dispatch({type: 'LOGIN_SUCCESSFUL', data: res.data });\n          return res.data;\n        } else if (res.status === 403 || res.status === 401) {\n          console.log(\"AUTH ERROR\");\n          dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n          throw res.data;\n        } else {\n          console.log(\"LOGIN FAIL\");\n          dispatch({type: \"LOGIN_FAILED\", data: res.data});\n          throw res.data;\n        }\n      })\n  }\n}\n\nexport const loadUser = () => {\n  return (dispatch, getState) => {\n    dispatch({type: \"USER_LOADING\"});\n\n    const token = getState().auth.token;\n\n    let headers = {\n      \"Content-Type\": \"application/json\",\n    };\n\n    if (token) {\n      headers[\"Authorization\"] = `Token ${token}`;\n    }\n    return fetch(BASE_URL, {headers, })\n      .then(res => {\n        if (res.status < 500) {\n          return res.json().then(data => {\n            return {status: res.status, data};\n          })\n        } else {\n          console.log(\"Server Error!\");\n          throw res;\n        }\n      })\n      .then(res => {\n        if (res.status === 200) {\n          dispatch({type: 'USER_LOADED', user: res.data });\n          return res.data;\n        } else if (res.status >= 400 && res.status < 500) {\n          dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n          throw res.data;\n        }\n      })\n  }\n}\n\n\nexport const register = (username, password) => {\n  return (dispatch, getState) => {\n    let headers = {\"Content-Type\": \"application/json\"};\n    let body = JSON.stringify({username, password});\n\n    return fetch(BASE_URL + \"/api/auth/register/\", {headers, body, method: \"POST\"})\n      .then(res => {\n        if (res.status < 500) {\n          return res.json().then(data => {\n            return {status: res.status, data};\n          })\n        } else {\n          console.log(\"Server Error!\");\n          throw res;\n        }\n      })\n      .then(res => {\n        if (res.status === 200) {\n          dispatch({type: 'REGISTRATION_SUCCESSFUL', data: res.data });\n          return res.data;\n        } else if (res.status === 403 || res.status === 401) {\n          dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n          throw res.data;\n        } else {\n          dispatch({type: \"REGISTRATION_FAILED\", data: res.data});\n          throw res.data;\n        }\n      })\n  }\n}\n\n\n\nexport const logout = () => {\n  return (dispatch, getState) => {\n    let headers = {\"Content-Type\": \"application/json\"};\n\n    return fetch(BASE_URL + \"/logout/\", {headers, body: \"\", method: \"POST\"})\n      .then(res => {\n        if (res.status === 204) {\n          return {status: res.status, data: {}};\n        } else if (res.status < 500) {\n          return res.json().then(data => {\n            return {status: res.status, data};\n          })\n        } else {\n          console.log(\"Server Error!\");\n          throw res;\n        }\n      })\n      .then(res => {\n        if (res.status === 204) {\n          dispatch({type: 'LOGOUT_SUCCESSFUL'});\n          return res.data;\n        } else if (res.status === 403 || res.status === 401) {\n          dispatch({type: \"AUTHENTICATION_ERROR\", data: res.data});\n          throw res.data;\n        }\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}